{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["myMaterials","id","type","color","weight","price","Header","className","Footer","rel","href","target","Button","text","onClick","active","style","cursor","width","height","margin","fontSize","fontWeight","backgroundColor","border","borderRadius","boxShadow","App","useState","material","setMaterial","printNumber","setPrintNumber","printWeight","setPrintWeight","printTimeH","setPrintTimeH","printTimeM","setPrintTimeM","printSupportsRemove","setPrintSupportsRemove","printPostProd","setPrintPostProd","selectedMaterial","filter","item","display","flexFlow","justifyContent","borderBottom","map","materialBtn","min","max","size","placeholder","onChange","event","value","step","toFixed","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eb990bb1.chunk.js","sourcesContent":["import { useState } from \"react\";\r\n\r\nconst materialInterests = 2;\r\n\r\nconst myMaterials = [\r\n  {\r\n    id: 0,\r\n    type: '',\r\n    color: '',\r\n    weight: 1,\r\n    price: 0\r\n  },\r\n  {\r\n    id: 100,\r\n    type: 'PLA',\r\n    color: 'black',\r\n    weight: 1000,\r\n    price: 25\r\n  },\r\n  {\r\n    id: 199,\r\n    type: 'PLA',\r\n    color: 'white',\r\n    weight: 1000,\r\n    price: 25\r\n  },\r\n  {\r\n    id: 110,\r\n    type: 'PLA',\r\n    color: 'gray',\r\n    weight: 1000,\r\n    price: 25\r\n  },\r\n  {\r\n    id: 120,\r\n    type: 'PLA',\r\n    color: 'blue',\r\n    weight: 1000,\r\n    price: 20\r\n  },\r\n  {\r\n    id: 125,\r\n    type: 'PLA',\r\n    color: '#DD5BFF',\r\n    weight: 1000,\r\n    price: 20\r\n  },\r\n  {\r\n    id: 130,\r\n    type: 'PLA',\r\n    color: 'red',\r\n    weight: 500,\r\n    price: 9\r\n  },\r\n  {\r\n    id: 135,\r\n    type: 'PLA',\r\n    color: '#FF7000',\r\n    weight: 500,\r\n    price: 9\r\n  },\r\n  {\r\n    id: 140,\r\n    type: 'PLA',\r\n    color: '#FFEB00',\r\n    weight: 500,\r\n    price: 9\r\n  },\r\n  {\r\n    id: 299,\r\n    type: 'PLA silk',\r\n    color: 'white',\r\n    weight: 250,\r\n    price: 10\r\n  },\r\n  {\r\n    id: 205,\r\n    type: 'PLA silk',\r\n    color: 'silver',\r\n    weight: 1000,\r\n    price: 18\r\n  },\r\n  {\r\n    id: 232,\r\n    type: 'PLA silk',\r\n    color: '#C34400',\r\n    weight: 1000,\r\n    price: 18\r\n  },\r\n  {\r\n    id: 300,\r\n    type: 'PETG',\r\n    color: 'black',\r\n    weight: 1000,\r\n    price: 27\r\n  },\r\n  {\r\n    id: 402,\r\n    type: 'PETG graphite',\r\n    color: '#505050',\r\n    weight: 1000,\r\n    price: 30\r\n  },\r\n  {\r\n    id: 499,\r\n    type: 'PETG gomma',\r\n    color: 'white',\r\n    weight: 500,\r\n    price: 20\r\n  },\r\n  {\r\n    id: 500,\r\n    type: 'ABS',\r\n    color: 'black',\r\n    weight: 1000,\r\n    price: 30\r\n  },\r\n  {\r\n    id: 530,\r\n    type: 'ABS',\r\n    color: '#D20000',\r\n    weight: 500,\r\n    price: 15\r\n  },\r\n]\r\n\r\n\r\nfunction App() {\r\n\r\n    const [material, setMaterial] = useState(0);\r\n  \r\n    const [printNumber, setPrintNumber] = useState(0);\r\n    const [printWeight, setPrintWeight] = useState(0);\r\n    const [printTimeH, setPrintTimeH] = useState(0);\r\n    const [printTimeM, setPrintTimeM] = useState(0);\r\n    const [printSupportsRemove, setPrintSupportsRemove] = useState(0);\r\n    const [printPostProd, setPrintPostProd] = useState(0);\r\n  \r\n    function filterByID(item) {\r\n      return (item.id === material ? 1 : 0);\r\n    }\r\n  \r\n    let selectedMaterial = myMaterials.filter(filterByID);\r\n  \r\n  \r\n    return (\r\n  \r\n      <div>\r\n        <Header />\r\n        <div className=\"content\">\r\n          <h3>Seleziona il materiale e il colore:</h3>\r\n          <ul style={{display: 'flex', flexFlow: 'row wrap', justifyContent: 'space-evenly', borderBottom: '1px solid black'}}>\r\n            {\r\n              myMaterials.map(materialBtn => {\r\n                if (materialBtn.id === material && materialBtn.id !== 0)\r\n                {\r\n                  return (<Button key={materialBtn.id} text={materialBtn.type} color={materialBtn.color} onClick={() => setMaterial(materialBtn.id)} active={true} />);\r\n                }\r\n                else if (materialBtn.id !== 0)\r\n                {\r\n                  return (<Button key={materialBtn.id} text={materialBtn.type} color={materialBtn.color} onClick={() => setMaterial(materialBtn.id)} active={false} />);\r\n                }\r\n                else\r\n                {\r\n                  return null;\r\n                }\r\n              })\r\n            }\r\n          </ul>\r\n  \r\n          <div className=\"inputField\" >\r\n            <h3>Inserire il peso dell'oggetto (grammi): </h3>\r\n            <input type=\"number\" min=\"0\" max=\"9999\" size=\"4\" placeholder=\"grammi\" onChange={event => {setPrintWeight(event.target.value)}} ></input>\r\n          </div>\r\n          <div className=\"inputField\" >\r\n            <h3>Inserire il numero di stampe necessarie a stampare tutti i pezzi: </h3>\r\n            <input type=\"number\" min=\"0\" max=\"99\" size=\"2\" step=\"1\" placeholder=\"stampe\" onChange={event => {setPrintNumber(event.target.value)}} ></input>\r\n          </div>\r\n          <div className=\"inputField\" >\r\n            <h3>Inserire il tempo stimato di stampa: </h3>\r\n            <div className=\"inputTime\">\r\n              <input type=\"number\" min=\"0\" max=\"168\" size=\"3\" placeholder=\"ore\" onChange={event => {setPrintTimeH(event.target.value)}} ></input>\r\n              <input type=\"number\" min=\"0\" max=\"59\" size=\"2\" placeholder=\"min\" onChange={event => {setPrintTimeM(event.target.value)}} ></input>\r\n            </div>\r\n          </div>\r\n          <div className=\"inputField\" >\r\n            <h3>Inserire il numero di pezzi che necessitano della rimozione dei supporti: </h3>\r\n            <input type=\"number\" min=\"0\" max=\"99\"  size=\"2\" placeholder=\"supporti\" onChange={event => {setPrintSupportsRemove(event.target.value)}} ></input>\r\n          </div>\r\n          <div className=\"inputField\">\r\n            <h3>Inserire il numero di pezzi che necessitano di post produzione: </h3>\r\n            <input type=\"number\" min=\"0\" max=\"99\" size=\"2\" placeholder=\"post prod.\" onChange={event => {setPrintPostProd(event.target.value)}} ></input>\r\n          </div>\r\n          \r\n          <h2>Prezzo stimato: €{(\r\n          ((selectedMaterial[0].price / selectedMaterial[0].weight) * printWeight * materialInterests) +\r\n          (printNumber * 0.5) +\r\n          (printTimeH * 0.1) +\r\n          (printTimeM * 0.00167) +\r\n          (printSupportsRemove * 0.1) +\r\n          (printPostProd * 0.2)\r\n          ).toFixed(2)}</h2>\r\n  \r\n          <a className=\"contactButton\" rel=\"noreferrer\" href=\"https://www.instagram.com/patta_02\" target=\"_blank\">Contattami</a>\r\n  \r\n        </div>\r\n        <Footer />\r\n  \r\n      </div>\r\n  \r\n    );\r\n  }\r\n  \r\n  const Header = () => {\r\n    return(\r\n      <header className=\"header\" >\r\n        <h1>Tariffe servizio di stampa 3D</h1>\r\n        <h2>Inserisci i dettagli della commissione per ottenere una stima del preventivo</h2>\r\n      </header>\r\n    )\r\n  }\r\n  \r\n  const Footer = () => {\r\n    return(\r\n      <header className=\"footer\">\r\n        <ul>\r\n          <a rel=\"noreferrer\" href=\"https://www.instagram.com/patta_02\" target=\"_blank\" >Instagram</a>\r\n          <a rel=\"noreferrer\" href=\"https://www.google.com\" target=\"_blank\" >Email</a>\r\n        </ul>\r\n        <h2>Copyright 2021 @Gabriele Pattarozzi - All rights reserved</h2>\r\n      </header>\r\n    )\r\n  }\r\n  \r\n  \r\n  const Button = ({ text, color, onClick, active }) => {\r\n    return(\r\n      <button onClick={onClick} style={{\r\n        cursor: 'pointer',\r\n        width: '150px', \r\n        height: '45px', \r\n        margin: '10px 10px', \r\n        fontSize: '15px', \r\n        fontWeight: 'bold', \r\n        backgroundColor: color, \r\n        color: (color === 'black' || color === 'blue' || color === '#505050' ? 'white' : 'black'), \r\n        border: (active ? '3px ridge #FFC832' : '1px solid black'), \r\n        borderRadius: '5px',\r\n        boxShadow: (active ? '0px 0px 20px #FFC832' : '')\r\n      }} >{text}</button>\r\n    )\r\n  }\r\n  \r\n  export default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}